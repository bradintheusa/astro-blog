---
// Component Imports
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import BlogPostPreview from '../components/BlogPostPreview.astro';

interface MarkdownFrontmatter {
	publishDate: number;
}



// This makes a list of all the years we need
export async function getStaticPaths() {

	// grab all the posts
	let allPosts = await Astro.glob('./posts/*.md');

	// get alll the years
	let allYears = allPosts.map( (p) => {
		const [year] = p.frontmatter.date.split("-")
		return year } );

	// unique ones
	let uniqueYears = [...new Set(allYears)];	

	// make a list of them and return them.
	return 	uniqueYears.map( (y) => { return { params: { 'year': y }}} )

}


const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

// now get and show the selected year
const {year} = Astro.params;

// get all of the posts
let allPosts = await Astro.glob('./posts/*.md');

// remove the ones not from this year
let justyear = allPosts.filter( (p) => {
	const [_year,_month] = p.frontmatter.date.split("-")
	return (year == _year)} );

// we will need all the months for making month page links.
let allMonths = justyear.map( (p) => {
	const [year,month] = p.frontmatter.date.split("-")
	return  month  } );

let um = [...new Set(allMonths)];	

// we need the year in the url
let uniqueMonths = um.map( (m) => {
	return {'url':  year+"-"+m,year: year, month: m, 'desc' : months[m-1] } 
} );


const sorter = (a, b) => {
   if(a.year !== b.year){
      return a.year - b.year;
   }else{
      return a.month - (b.month);
   };
};
uniqueMonths = uniqueMonths.sort(sorter);




let title = "Brad's Blog";
let description =  year;
let permalink = 'https://example.com/';
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} permalink={permalink} />
		<link rel="stylesheet" href='../styles/blog.css' />

		<style>
			header {
				width: 100%;
				height: 100%;
				background-color: var(--theme-bg-offset);
				display: flex;
				align-items: center;
				justify-content: center;
			}

			.content {
				margin-top: 4rem;
				margin-bottom: 8rem;
			}

			.content :global(main > * + *) {
				margin-top: 1rem;
			}

			.intro {
				padding-bottom: 4rem;
				margin-bottom: 2rem;
				border-bottom: 4px solid var(--theme-divider);
			}

			.intro > * {
				margin: 0;
			}

			.latest {
				font-size: 2.5rem;
				font-weight: 700;
			}
		</style>
	</head>

	<body>
		<BlogHeader />
		<div class="wrapper">
			<main class="content">
				<section class="intro">
					<h1 class="latest">{title}</h1>
					<p>{description}</p>
				</section>

				<div>
				<div>Months 
				{uniqueMonths.map((m) => <span>-<a href={m.url}>{m.desc}</a></span>)}
				</div>								
				
				</div>
				<section aria-label="Blog post list">
					{justyear.map((p) => <BlogPostPreview post={p} />)}
				</section>
			</main>
		</div>
	</body>
</html>
